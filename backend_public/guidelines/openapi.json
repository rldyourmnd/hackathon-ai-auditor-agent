{
    "openapi": "3.1.0",
    "info": {
        "title": "Curestry API",
        "description": "AI Prompt Analysis & Optimization Platform",
        "version": "0.1.0"
    },
    "paths": {
        "/analyze/": {
            "post": {
                "tags": [
                    "analysis"
                ],
                "summary": "Analyze Prompt",
                "description": "Analyze a prompt for quality, consistency, and potential improvements.\n\nThis endpoint performs comprehensive prompt analysis including:\n- Language detection and translation\n- Format validation and markup fixing\n- Vocabulary unification\n- Contradiction detection\n- Semantic entropy analysis\n- LLM-as-judge scoring\n- Improvement patch generation\n- Clarification questions",
                "operationId": "analyze_prompt_analyze__post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnalyzeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnalyzeResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/analyze/apply": {
            "post": {
                "tags": [
                    "analysis"
                ],
                "summary": "Apply Patches",
                "description": "Apply selected improvement patches to a prompt.",
                "operationId": "apply_patches_analyze_apply_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplyPatchesRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PromptImproved"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/analyze/clarify": {
            "post": {
                "tags": [
                    "analysis"
                ],
                "summary": "Process Clarification",
                "description": "Process clarification answers and provide updated analysis.",
                "operationId": "process_clarification_analyze_clarify_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClarifyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnalyzeResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/analyze/export/{prompt_id}.{format_type}": {
            "get": {
                "tags": [
                    "analysis"
                ],
                "summary": "Export Prompt",
                "description": "Export analyzed prompt in specified format (md or xml).",
                "operationId": "export_prompt_analyze_export__prompt_id___format_type__get",
                "parameters": [
                    {
                        "name": "prompt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Prompt Id"
                        }
                    },
                    {
                        "name": "format_type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Format Type"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/analyze/report/{prompt_id}.json": {
            "get": {
                "tags": [
                    "analysis"
                ],
                "summary": "Download Report",
                "description": "Download full analysis report as JSON.",
                "operationId": "download_report_analyze_report__prompt_id__json_get",
                "parameters": [
                    {
                        "name": "prompt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Prompt Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/prompt-base/add": {
            "post": {
                "tags": [
                    "prompt-base"
                ],
                "summary": "Add Prompt",
                "description": "Add a new prompt to the prompt-base.\n\nCreates a new prompt with the provided content and metadata.\nValidates the prompt structure and stores it in the database.",
                "operationId": "add_prompt_prompt_base_add_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PromptCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PromptRead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/prompt-base/check": {
            "post": {
                "tags": [
                    "prompt-base"
                ],
                "summary": "Check Prompt Conflicts",
                "description": "Check a prompt for conflicts with existing prompts in the prompt-base.\n\nAnalyzes the prompt against existing prompts to detect:\n- Content conflicts or contradictions\n- Dependency relationships\n- Override relationships\n\nReturns conflict analysis and suggested relations.",
                "operationId": "check_prompt_conflicts_prompt_base_check_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PromptCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/prompt-base/prompts": {
            "get": {
                "tags": [
                    "prompt-base"
                ],
                "summary": "List Prompts",
                "description": "List prompts in the prompt-base with optional filtering.\n\nSupports pagination and filtering by tags, language, and format type.",
                "operationId": "list_prompts_prompt_base_prompts_get",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of prompts to skip",
                            "default": 0,
                            "title": "Skip"
                        },
                        "description": "Number of prompts to skip"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "description": "Maximum number of prompts to return",
                            "default": 100,
                            "title": "Limit"
                        },
                        "description": "Maximum number of prompts to return"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Comma-separated list of tags to filter by",
                            "title": "Tags"
                        },
                        "description": "Comma-separated list of tags to filter by"
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Language code to filter by",
                            "title": "Language"
                        },
                        "description": "Language code to filter by"
                    },
                    {
                        "name": "format_type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Format type to filter by",
                            "title": "Format Type"
                        },
                        "description": "Format type to filter by"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PromptRead"
                                    },
                                    "title": "Response List Prompts Prompt Base Prompts Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/prompt-base/prompts/{prompt_id}": {
            "get": {
                "tags": [
                    "prompt-base"
                ],
                "summary": "Get Prompt",
                "description": "Get a specific prompt by ID.",
                "operationId": "get_prompt_prompt_base_prompts__prompt_id__get",
                "parameters": [
                    {
                        "name": "prompt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Prompt Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PromptRead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "prompt-base"
                ],
                "summary": "Update Prompt",
                "description": "Update an existing prompt.",
                "operationId": "update_prompt_prompt_base_prompts__prompt_id__put",
                "parameters": [
                    {
                        "name": "prompt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Prompt Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PromptUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PromptRead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "prompt-base"
                ],
                "summary": "Delete Prompt",
                "description": "Delete a prompt from the prompt-base.",
                "operationId": "delete_prompt_prompt_base_prompts__prompt_id__delete",
                "parameters": [
                    {
                        "name": "prompt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Prompt Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/prompt-base/search": {
            "get": {
                "tags": [
                    "prompt-base"
                ],
                "summary": "Search Prompts",
                "description": "Search prompts by content, name, or description.",
                "operationId": "search_prompts_prompt_base_search_get",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 2,
                            "description": "Search query",
                            "title": "Q"
                        },
                        "description": "Search query"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Maximum number of results",
                            "default": 50,
                            "title": "Limit"
                        },
                        "description": "Maximum number of results"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PromptRead"
                                    },
                                    "title": "Response Search Prompts Prompt Base Search Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/prompt-base/relations": {
            "post": {
                "tags": [
                    "prompt-base"
                ],
                "summary": "Create Relation",
                "description": "Create a relationship between two prompts.",
                "operationId": "create_relation_prompt_base_relations_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PromptRelationCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PromptRelationRead"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/prompt-base/prompts/{prompt_id}/relations": {
            "get": {
                "tags": [
                    "prompt-base"
                ],
                "summary": "Get Prompt Relations",
                "description": "Get all relationships for a specific prompt.",
                "operationId": "get_prompt_relations_prompt_base_prompts__prompt_id__relations_get",
                "parameters": [
                    {
                        "name": "prompt_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Prompt Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PromptRelationRead"
                                    },
                                    "title": "Response Get Prompt Relations Prompt Base Prompts  Prompt Id  Relations Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/prompt-base/relations/{relation_id}": {
            "delete": {
                "tags": [
                    "prompt-base"
                ],
                "summary": "Delete Relation",
                "description": "Delete a prompt relationship.",
                "operationId": "delete_relation_prompt_base_relations__relation_id__delete",
                "parameters": [
                    {
                        "name": "relation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Relation Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "summary": "Health Check",
                "description": "Health check endpoint with OpenAI and database connectivity verification.",
                "operationId": "health_check_healthz_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HealthResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "summary": "Root",
                "description": "Root endpoint with basic API information.",
                "operationId": "root__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AnalyzeRequest": {
                "properties": {
                    "prompt": {
                        "$ref": "#/components/schemas/PromptInput"
                    },
                    "include_entropy": {
                        "type": "boolean",
                        "title": "Include Entropy",
                        "description": "Include semantic entropy analysis",
                        "default": true
                    },
                    "include_clarify": {
                        "type": "boolean",
                        "title": "Include Clarify",
                        "description": "Include clarification questions",
                        "default": true
                    },
                    "include_patches": {
                        "type": "boolean",
                        "title": "Include Patches",
                        "description": "Include improvement patches",
                        "default": true
                    }
                },
                "type": "object",
                "required": [
                    "prompt"
                ],
                "title": "AnalyzeRequest",
                "description": "Request to analyze a prompt."
            },
            "AnalyzeResponse": {
                "properties": {
                    "report": {
                        "$ref": "#/components/schemas/MetricReport"
                    },
                    "patches": {
                        "items": {
                            "$ref": "#/components/schemas/Patch"
                        },
                        "type": "array",
                        "title": "Patches"
                    },
                    "questions": {
                        "items": {
                            "$ref": "#/components/schemas/ClarifyQuestion"
                        },
                        "type": "array",
                        "title": "Questions"
                    }
                },
                "type": "object",
                "required": [
                    "report",
                    "patches",
                    "questions"
                ],
                "title": "AnalyzeResponse",
                "description": "Response from prompt analysis."
            },
            "ApplyPatchesRequest": {
                "properties": {
                    "prompt_id": {
                        "type": "string",
                        "title": "Prompt Id",
                        "description": "ID of the analyzed prompt"
                    },
                    "patch_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Patch Ids",
                        "description": "IDs of patches to apply"
                    },
                    "apply_safe_all": {
                        "type": "boolean",
                        "title": "Apply Safe All",
                        "description": "Apply all safe patches",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "prompt_id",
                    "patch_ids"
                ],
                "title": "ApplyPatchesRequest",
                "description": "Request to apply specific patches."
            },
            "ClarifyAnswer": {
                "properties": {
                    "question_id": {
                        "type": "string",
                        "title": "Question Id",
                        "description": "ID of the question being answered"
                    },
                    "answer": {
                        "type": "string",
                        "title": "Answer",
                        "description": "The answer provided"
                    }
                },
                "type": "object",
                "required": [
                    "question_id",
                    "answer"
                ],
                "title": "ClarifyAnswer",
                "description": "Answer to a clarification question."
            },
            "ClarifyQuestion": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Question identifier"
                    },
                    "question": {
                        "type": "string",
                        "title": "Question",
                        "description": "The clarification question"
                    },
                    "category": {
                        "type": "string",
                        "title": "Category",
                        "description": "What aspect needs clarification"
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high"
                        ],
                        "title": "Priority",
                        "description": "Question priority"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "question",
                    "category",
                    "priority"
                ],
                "title": "ClarifyQuestion",
                "description": "Clarification question for ambiguous prompts."
            },
            "ClarifyRequest": {
                "properties": {
                    "prompt_id": {
                        "type": "string",
                        "title": "Prompt Id",
                        "description": "ID of the prompt being clarified"
                    },
                    "answers": {
                        "items": {
                            "$ref": "#/components/schemas/ClarifyAnswer"
                        },
                        "type": "array",
                        "title": "Answers",
                        "description": "Answers to clarification questions"
                    }
                },
                "type": "object",
                "required": [
                    "prompt_id",
                    "answers"
                ],
                "title": "ClarifyRequest",
                "description": "Request to process clarification answers."
            },
            "Contradiction": {
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "intra",
                            "inter"
                        ],
                        "title": "Type",
                        "description": "Contradiction type"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "Description of the contradiction"
                    },
                    "severity": {
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high"
                        ],
                        "title": "Severity",
                        "description": "Severity level"
                    },
                    "locations": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Locations",
                        "description": "Where contradictions were found"
                    }
                },
                "type": "object",
                "required": [
                    "type",
                    "description",
                    "severity",
                    "locations"
                ],
                "title": "Contradiction",
                "description": "Detected contradiction."
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "HealthResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "version": {
                        "type": "string",
                        "title": "Version"
                    },
                    "environment": {
                        "type": "string",
                        "title": "Environment"
                    },
                    "openai_configured": {
                        "type": "boolean",
                        "title": "Openai Configured",
                        "description": "Whether OpenAI is properly configured"
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "message",
                    "version",
                    "environment",
                    "openai_configured"
                ],
                "title": "HealthResponse",
                "description": "Health check response."
            },
            "MetricReport": {
                "properties": {
                    "prompt_id": {
                        "type": "string",
                        "title": "Prompt Id",
                        "description": "Unique identifier for this analysis"
                    },
                    "original_prompt": {
                        "type": "string",
                        "title": "Original Prompt",
                        "description": "The original prompt text"
                    },
                    "analyzed_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Analyzed At"
                    },
                    "detected_language": {
                        "type": "string",
                        "title": "Detected Language",
                        "description": "Auto-detected language"
                    },
                    "translated": {
                        "type": "boolean",
                        "title": "Translated",
                        "description": "Whether prompt was translated",
                        "default": false
                    },
                    "format_valid": {
                        "type": "boolean",
                        "title": "Format Valid",
                        "description": "Whether markup format is valid"
                    },
                    "judge_score": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MetricScore"
                            }
                        ],
                        "description": "LLM-as-judge evaluation"
                    },
                    "semantic_entropy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SemanticEntropy"
                            }
                        ],
                        "description": "Response consistency analysis"
                    },
                    "contradictions": {
                        "items": {
                            "$ref": "#/components/schemas/Contradiction"
                        },
                        "type": "array",
                        "title": "Contradictions"
                    },
                    "length_chars": {
                        "type": "integer",
                        "title": "Length Chars",
                        "description": "Character count"
                    },
                    "length_words": {
                        "type": "integer",
                        "title": "Length Words",
                        "description": "Word count"
                    },
                    "complexity_score": {
                        "type": "number",
                        "maximum": 10.0,
                        "minimum": 0.0,
                        "title": "Complexity Score",
                        "description": "Vocabulary complexity"
                    },
                    "patches": {
                        "items": {
                            "$ref": "#/components/schemas/Patch"
                        },
                        "type": "array",
                        "title": "Patches"
                    },
                    "clarify_questions": {
                        "items": {
                            "$ref": "#/components/schemas/ClarifyQuestion"
                        },
                        "type": "array",
                        "title": "Clarify Questions"
                    },
                    "overall_score": {
                        "type": "number",
                        "maximum": 10.0,
                        "minimum": 0.0,
                        "title": "Overall Score",
                        "description": "Overall quality score"
                    },
                    "improvement_priority": {
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high"
                        ],
                        "title": "Improvement Priority",
                        "description": "How urgently this prompt needs improvement"
                    }
                },
                "type": "object",
                "required": [
                    "prompt_id",
                    "original_prompt",
                    "detected_language",
                    "format_valid",
                    "judge_score",
                    "semantic_entropy",
                    "length_chars",
                    "length_words",
                    "complexity_score",
                    "overall_score",
                    "improvement_priority"
                ],
                "title": "MetricReport",
                "description": "Comprehensive analysis report."
            },
            "MetricScore": {
                "properties": {
                    "score": {
                        "type": "number",
                        "maximum": 10.0,
                        "minimum": 0.0,
                        "title": "Score",
                        "description": "Score from 0-10"
                    },
                    "rationale": {
                        "type": "string",
                        "title": "Rationale",
                        "description": "Brief explanation of the score"
                    },
                    "details": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Details",
                        "description": "Additional metric-specific details"
                    }
                },
                "type": "object",
                "required": [
                    "score",
                    "rationale"
                ],
                "title": "MetricScore",
                "description": "Individual metric score."
            },
            "Patch": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id",
                        "description": "Unique patch identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "safe",
                            "risky"
                        ],
                        "title": "Type",
                        "description": "Patch risk level"
                    },
                    "category": {
                        "type": "string",
                        "enum": [
                            "markup",
                            "vocabulary",
                            "structure",
                            "clarity"
                        ],
                        "title": "Category",
                        "description": "Type of improvement"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "What this patch does"
                    },
                    "original": {
                        "type": "string",
                        "title": "Original",
                        "description": "Original text to replace"
                    },
                    "improved": {
                        "type": "string",
                        "title": "Improved",
                        "description": "Improved text"
                    },
                    "rationale": {
                        "type": "string",
                        "title": "Rationale",
                        "description": "Why this improvement helps"
                    },
                    "confidence": {
                        "type": "number",
                        "maximum": 1.0,
                        "minimum": 0.0,
                        "title": "Confidence",
                        "description": "Confidence in this patch"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "type",
                    "category",
                    "description",
                    "original",
                    "improved",
                    "rationale",
                    "confidence"
                ],
                "title": "Patch",
                "description": "Improvement suggestion for the prompt."
            },
            "PromptCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "Name",
                        "description": "Prompt name/title"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Prompt description"
                    },
                    "content": {
                        "type": "string",
                        "title": "Content",
                        "description": "The prompt text"
                    },
                    "format_type": {
                        "type": "string",
                        "maxLength": 50,
                        "title": "Format Type",
                        "description": "Prompt format (auto/xml/markdown)",
                        "default": "auto"
                    },
                    "language": {
                        "type": "string",
                        "maxLength": 10,
                        "title": "Language",
                        "description": "Prompt language",
                        "default": "en"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "Tags for categorization"
                    },
                    "extra_metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Extra Metadata",
                        "description": "Additional metadata"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "description": "Creation timestamp"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At",
                        "description": "Last update timestamp"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "content"
                ],
                "title": "PromptCreate",
                "description": "Schema for creating a new prompt."
            },
            "PromptImproved": {
                "properties": {
                    "original_prompt": {
                        "type": "string",
                        "title": "Original Prompt",
                        "description": "The original prompt"
                    },
                    "improved_prompt": {
                        "type": "string",
                        "title": "Improved Prompt",
                        "description": "The improved prompt"
                    },
                    "applied_patches": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Applied Patches",
                        "description": "IDs of patches that were applied"
                    },
                    "improvement_summary": {
                        "type": "string",
                        "title": "Improvement Summary",
                        "description": "Summary of changes made"
                    },
                    "quality_gain": {
                        "type": "number",
                        "title": "Quality Gain",
                        "description": "Estimated quality improvement"
                    }
                },
                "type": "object",
                "required": [
                    "original_prompt",
                    "improved_prompt",
                    "applied_patches",
                    "improvement_summary",
                    "quality_gain"
                ],
                "title": "PromptImproved",
                "description": "Final improved prompt after applying patches."
            },
            "PromptInput": {
                "properties": {
                    "content": {
                        "type": "string",
                        "title": "Content",
                        "description": "The prompt text to analyze"
                    },
                    "format_type": {
                        "type": "string",
                        "enum": [
                            "auto",
                            "xml",
                            "markdown"
                        ],
                        "title": "Format Type",
                        "description": "Expected format of the prompt",
                        "default": "auto"
                    },
                    "language": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Language",
                        "description": "Language of the prompt (auto-detected if not provided)"
                    },
                    "metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Metadata",
                        "description": "Additional metadata about the prompt"
                    }
                },
                "type": "object",
                "required": [
                    "content"
                ],
                "title": "PromptInput",
                "description": "Input prompt for analysis."
            },
            "PromptRead": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "title": "Name",
                        "description": "Prompt name/title"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Prompt description"
                    },
                    "content": {
                        "type": "string",
                        "title": "Content",
                        "description": "The prompt text"
                    },
                    "format_type": {
                        "type": "string",
                        "maxLength": 50,
                        "title": "Format Type",
                        "description": "Prompt format (auto/xml/markdown)",
                        "default": "auto"
                    },
                    "language": {
                        "type": "string",
                        "maxLength": 10,
                        "title": "Language",
                        "description": "Prompt language",
                        "default": "en"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "Tags for categorization"
                    },
                    "extra_metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Extra Metadata",
                        "description": "Additional metadata"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "content",
                    "created_at",
                    "updated_at",
                    "id"
                ],
                "title": "PromptRead",
                "description": "Schema for reading a prompt."
            },
            "PromptRelationCreate": {
                "properties": {
                    "relation_type": {
                        "type": "string",
                        "maxLength": 50,
                        "title": "Relation Type",
                        "description": "Relationship type: depends_on, overrides, conflicts_with"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Description of the relationship"
                    },
                    "extra_metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Extra Metadata"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "source_id": {
                        "type": "string",
                        "title": "Source Id"
                    },
                    "target_id": {
                        "type": "string",
                        "title": "Target Id"
                    }
                },
                "type": "object",
                "required": [
                    "relation_type",
                    "source_id",
                    "target_id"
                ],
                "title": "PromptRelationCreate",
                "description": "Schema for creating a prompt relationship."
            },
            "PromptRelationRead": {
                "properties": {
                    "relation_type": {
                        "type": "string",
                        "maxLength": 50,
                        "title": "Relation Type",
                        "description": "Relationship type: depends_on, overrides, conflicts_with"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Description of the relationship"
                    },
                    "extra_metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Extra Metadata"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "source_id": {
                        "type": "string",
                        "title": "Source Id"
                    },
                    "target_id": {
                        "type": "string",
                        "title": "Target Id"
                    }
                },
                "type": "object",
                "required": [
                    "relation_type",
                    "created_at",
                    "id",
                    "source_id",
                    "target_id"
                ],
                "title": "PromptRelationRead",
                "description": "Schema for reading a prompt relationship."
            },
            "PromptUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "content": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Content"
                    },
                    "format_type": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Format Type"
                    },
                    "language": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Language"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags"
                    },
                    "extra_metadata": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Extra Metadata"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "title": "PromptUpdate",
                "description": "Schema for updating a prompt."
            },
            "SemanticEntropy": {
                "properties": {
                    "entropy": {
                        "type": "number",
                        "title": "Entropy",
                        "description": "Entropy score"
                    },
                    "spread": {
                        "type": "number",
                        "title": "Spread",
                        "description": "Response variation measure"
                    },
                    "clusters": {
                        "type": "integer",
                        "title": "Clusters",
                        "description": "Number of distinct response clusters"
                    },
                    "samples": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Samples",
                        "description": "Sample responses used for analysis"
                    }
                },
                "type": "object",
                "required": [
                    "entropy",
                    "spread",
                    "clusters",
                    "samples"
                ],
                "title": "SemanticEntropy",
                "description": "Semantic entropy analysis results."
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
}
